let Post,User,expressJwt;_8ae‍.x([["requireSignin",()=>requireSignin],["canEditDeletePost",()=>canEditDeletePost],["isAdmin",()=>isAdmin]]);_8ae‍.w("../models/post",[["default",["Post"],function(v){Post=v}]]);_8ae‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_8ae‍.w("express-jwt",[["default",["expressJwt"],function(v){expressJwt=v}]]);



       const requireSignin = expressJwt({
  secret: process.env.JWT_SECRET,
  algorithms: ["HS256"],
});

       const canEditDeletePost = async (req, res, next) => {
  try {
    const post = await Post.findById(req.params._id);
    // console.log("POST in EDITDELETE MIDDLEWARE => ", post);
    if (req.user._id != post.postedBy) {
      return res.status(400).send("Unauthorized");
    } else {
      next();
    }
  } catch (err) {
    _8ae‍.g.console.log(err);
  }
};

       const isAdmin = async (req, res, next) => {
  try {
    const user = await User.findById(req.user._id);
    // console.log("isAdmin ===> ", user);
    if (user.role !== "Admin") {
      return res.status(400).send("Unauthorized");
    } else {
      next();
    }
  } catch (err) {
    _8ae‍.g.console.log(err);
  }
};
